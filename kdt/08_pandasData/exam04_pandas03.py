# -*- coding: utf-8 -*-
"""exam04_pandas03.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NYG2evOyy2wZzxNm93RjAPVlGI1v7WRo

# 🎈 Apply()
"""

import pandas as pd
import seaborn as sns  # 데이터 예제 불러오는 용

titanic = sns.load_dataset('titanic')
df = titanic.loc[:, ['age', 'fare']]
# df['fare'] = df['fare'].round(1)
df['ten'] = 10
print(df.head())

# 방법 1

def add_5(n) :
  return n + 5

for i in range(len(df)):
  df.iloc[i, 0] = add_5(df.iloc[i, 0])

print(df.age)

# 방법 2

sr1 = df['age'].apply(add_5)  # 객체.apply(적용할 함수명)
print(sr1)

# 방법 3

sr1 = df['age'].apply(lambda x: x-5)
# 람다 함수 이제야 이해된..;; 함수선언을 약식으로 저기다가..
print(sr1)

"""# 🎁 Concat()"""

df1 = pd.DataFrame({'a':['a0', 'a1', 'a2', 'a3'],
                    'b':['b0', 'b1', 'b2', 'b3'],
                    'c':['c0', 'c1', 'c2', 'c3']}, 
                   index=[0, 1, 2, 3])

df2 = pd.DataFrame({'a':['a2', 'a3', 'a4', 'a5'],
                    'b':['b2', 'b3', 'b4', 'b5'],
                    'c':['c2', 'c3', 'c4', 'c5'],
                    'd':['d2', 'd3', 'd4', 'd5']}, 
                   index=[2, 3, 4, 5])

print(df1)
print(df2)

result1 = df1 + df2
print(result1)  # 겹치는 항목만 리턴하고 나머지는 NaN

result1 = pd.concat([df1, df2])
print(result1)  # 이건 같은 좌표에서 더한다기보다 그냥 이어붙이기..?

result1 = pd.concat([df1, df2], ignore_index=True)  # 기존 인덱스 무시하고 새로 넘버링
print(result1)

result2 = pd.concat([df1, df2], axis='columns')
print(result2)

result3 = pd.concat([df1, df2], axis='columns', join='inner')
print(result3)

